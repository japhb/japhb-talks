#!/usr/bin/env perl6

use v6;
use JSON::Tiny;

class DeckMaker {
    has $.root-dir     = script-dir().parent;
    has $.reveal-dir   = reveal-path($!root-dir);
    has $.template-dir = $!root-dir.child('templates');
    has $.decks-json-path;
    has $.decks;
    has %.templates;

    method init() {
        self.load-decks;
        self.load-templates;
    }

    method load-decks() {
        $!decks := from-json(slurp $.decks-json-path);
        say "Loaded {+$.decks} deck definition{_s(+$.decks)} from $.decks-json-path";
    }

    method load-templates() {
        %.templates<deck>  := slurp "$.template-dir/deck.html";
        %.templates<index> := slurp "$.template-dir/index.html";
        say "Loaded {+%.templates} template{_s(+%.templates)} from $.template-dir";
    }

    method gen-presentations() {
        gen-presentation($_, %.templates<deck>, $.reveal-dir) for $.decks.list;
        gen-index($.decks, %.templates<index>);
        say "Generated {+$.decks} presentation{_s(+$.decks)} and updated index";
    }
}


#= Merge template with Markdown slide files to create presentations
multi MAIN($decks-json-path = 'decks.json') {
    my $maker = DeckMaker.new(:$decks-json-path);
    $maker.init;

    $maker.gen-presentations;

    say "Completed {+$maker.decks} presentation{_s(+$maker.decks)} in {(now - $*INITTIME).fmt('%.2f')} seconds.";
}


sub gen-presentation($pres, $template, $reveal) {
    my $divider      = /\n+ '----' \n+/;
    $pres<body>      = slurp($pres<file>).split($divider).map(&put-in-section).join;
    $pres<html-file> = $pres<file> ~ '.html';
    $pres<reveal>    = $reveal;

    spurt $pres<html-file>, $template.subst(/'%' (@($pres.keys)) '%'/, -> $/ { $pres{~$0} }, :g);
}


sub put-in-section($TEXT) {
    return qq[
    <section data-markdown>
        <script type="text/template">
$TEXT
        </script>
    </section>
];
}


sub gen-index($decks, $index) {
    my $dir   = cwd.path.basename;
    my @items = $decks.list.map: {"    <li><a href=\"{$_<html-file>}\">{$_<title>}</a></li>\n"};

    spurt 'index.html', $index.subst('%dir%', $dir).subst('%items%', @items.join);
}


sub script-dir() {
    my $cwd = $*CWD;
    LEAVE chdir $cwd;

    chdir $*PROGRAM_NAME.path.directory;
    cwd();
}


sub reveal-path($root-dir) {
    my $root-to-cwd = $*CWD.subst("$root-dir/", '');
    my $cwd-to-root = $root-to-cwd.subst(rx{<-['/']>+}, '..', :g);
    "$cwd-to-root/3rdparty/reveal.js"
}


#= Assist in declining English number phrases
sub _s($number, $plural = 's', $singular = '') {
    $number == 1 ?? $singular !! $plural;
}
